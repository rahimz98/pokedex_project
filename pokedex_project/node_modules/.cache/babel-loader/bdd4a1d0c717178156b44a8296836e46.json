{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zille\\\\OneDrive\\\\Documents\\\\GitHub\\\\pokedex_project\\\\pokedex_project\\\\src\\\\Pokedex.js\";\nimport React, { useState, useEffect } from 'react';\nimport { AppBar, Toolbar, Grid, Card, CardContent, CircularProgress, CardMedia, Typography, TextField } from \"@material-ui/core\";\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { toFirstCharUppercase } from './utils.js';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  pokedexContainer: {\n    paddingTop: '20px',\n    paddingLeft: '50px',\n    paddingRight: '50px'\n  },\n  cardMedia: {\n    margin: \"auto\"\n  },\n  cardContent: {\n    textAlign: 'center'\n  },\n  searchContainer: {\n    display: \"flex\",\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    marginTop: \"5px\",\n    marginBottom: \"5px\"\n  },\n  searchIcon: {\n    alignSelf: \"flex-end\",\n    marginBottom: \"5px\"\n  },\n  searchInput: {\n    width: \"200px\",\n    margin: \"5px\"\n  }\n}));\n\nconst Pokedex = props => {\n  const {\n    history\n  } = props;\n  const classes = useStyles();\n  const [pokemonData, setPokemonData] = useState({});\n  const [filter, setFilter] = useState([]);\n  useEffect(() => {\n    axios.get(`https://pokeapi.co/api/v2/pokemon?limit=807`).then(function (response) {\n      const {\n        data\n      } = response;\n      const {\n        results\n      } = data;\n      const newPokemonData = {};\n      results.forEach((pokemon, index) => {\n        newPokemonData[index + 1] = {\n          id: index + 1,\n          name: pokemon.name,\n          sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`\n        };\n      });\n      setPokemonData(newPokemonData);\n    });\n  }, []);\n\n  const handleSearchChange = e => {\n    setFilter(e.target.value);\n  };\n\n  const getPokemonCard = pokemonId => {\n    console.log(pokemonData[`${pokemonId}`]);\n    const {\n      id,\n      name,\n      sprite\n    } = pokemonData[pokemonId];\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      key: pokemonId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      onClick: () => history.push(`/${pokemonId}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      className: classes.cardMedia,\n      image: sprite,\n      style: {\n        width: \"130px\",\n        height: \"130px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.cardContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, `${id}.${toFirstCharUppercase(name)}`))));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.searchContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    className: classes.searchIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.searchInput,\n    onChange: handleSearchChange,\n    label: \"Pokemon\",\n    variant: \"standard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  })))), pokemonData ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.pokedexContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, Object.keys(pokemonData).map(pokemonId => pokemonData[pokemonId].name.includes(filter) && getPokemonCard(pokemonId))) : /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default Pokedex;","map":{"version":3,"sources":["C:/Users/zille/OneDrive/Documents/GitHub/pokedex_project/pokedex_project/src/Pokedex.js"],"names":["React","useState","useEffect","AppBar","Toolbar","Grid","Card","CardContent","CircularProgress","CardMedia","Typography","TextField","fade","makeStyles","SearchIcon","toFirstCharUppercase","axios","useStyles","theme","pokedexContainer","paddingTop","paddingLeft","paddingRight","cardMedia","margin","cardContent","textAlign","searchContainer","display","backgroundColor","palette","common","white","marginTop","marginBottom","searchIcon","alignSelf","searchInput","width","Pokedex","props","history","classes","pokemonData","setPokemonData","filter","setFilter","get","then","response","data","results","newPokemonData","forEach","pokemon","index","id","name","sprite","handleSearchChange","e","target","value","getPokemonCard","pokemonId","console","log","push","height","Object","keys","map","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n    AppBar ,\r\n    Toolbar,\r\n    Grid,\r\n    Card, \r\n    CardContent, \r\n    CircularProgress, \r\n    CardMedia, \r\n    Typography,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport {fade, makeStyles} from '@material-ui/core/styles';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport {toFirstCharUppercase} from './utils.js';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pokedexContainer: {\r\n        paddingTop: '20px',\r\n        paddingLeft: '50px',\r\n        paddingRight: '50px'\r\n    },\r\n    cardMedia: {\r\n        margin: \"auto\"\r\n    },\r\n    cardContent: {\r\n        textAlign: 'center'\r\n    },\r\n    searchContainer: {\r\n        display: \"flex\",\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        paddingLeft: \"20px\",\r\n        paddingRight: \"20px\",\r\n        marginTop: \"5px\",\r\n        marginBottom: \"5px\",\r\n      },\r\n      searchIcon: {\r\n        alignSelf: \"flex-end\",\r\n        marginBottom: \"5px\",\r\n      },\r\n      searchInput: {\r\n        width: \"200px\",\r\n        margin: \"5px\",\r\n      },\r\n}));\r\n\r\n\r\nconst Pokedex = (props) => {\r\n    const {history} = props;\r\n    const classes = useStyles();\r\n    const [pokemonData, setPokemonData] = useState({});\r\n    const [filter, setFilter] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get(`https://pokeapi.co/api/v2/pokemon?limit=807`)\r\n        .then(function (response) {\r\n            const { data } = response;\r\n            const { results } = data;\r\n            const newPokemonData = {};\r\n            results.forEach((pokemon, index) => {\r\n              newPokemonData[index + 1] = {\r\n                id: index + 1,\r\n                name: pokemon.name,\r\n                sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\r\n                  index + 1\r\n                }.png`,\r\n              };\r\n            });\r\n            setPokemonData(newPokemonData);\r\n          });\r\n    }, []);\r\n\r\n    const handleSearchChange = (e) => {\r\n        setFilter(e.target.value);\r\n    };\r\n    \r\n    const getPokemonCard = (pokemonId) => {\r\n\r\n        console.log(pokemonData[`${pokemonId}`]);\r\n        const {id, name, sprite} = pokemonData[pokemonId];\r\n\r\n        return (\r\n            <Grid item xs = {12} sm = {4} key = {pokemonId}>\r\n                <Card onClick = {() => history.push(`/${pokemonId}`)} > \r\n                    <CardMedia \r\n                        className = {classes.cardMedia}\r\n                        image = {sprite}\r\n                        style = {{width: \"130px\", height:\"130px\" }}\r\n                    />\r\n                    <CardContent className = {classes.cardContent}>\r\n                        <Typography>{`${id}.${toFirstCharUppercase(name)}`}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n    \r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar position = \"static\">\r\n                <Toolbar>\r\n                <div className={classes.searchContainer}>\r\n                    <SearchIcon className={classes.searchIcon} />\r\n                    <TextField\r\n                        className={classes.searchInput}\r\n                        onChange={handleSearchChange}\r\n                        label=\"Pokemon\"\r\n                        variant=\"standard\"\r\n                    />\r\n                </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {pokemonData ? (\r\n                <Grid container spacing = {2} className = {classes.pokedexContainer}>\r\n                    {Object.keys(pokemonData).map(pokemonId => \r\n                    pokemonData[pokemonId].name.includes(filter) &&\r\n                        getPokemonCard(pokemonId))}\r\n                </Grid>\r\n            ) : (\r\n                <CircularProgress />\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pokedex;"]},"metadata":{},"sourceType":"module"}