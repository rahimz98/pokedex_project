{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zille\\\\OneDrive\\\\Documents\\\\GitHub\\\\pokedex_project\\\\pokedex_project\\\\src\\\\Pokedex.js\";\nimport React, { useState, useEffect } from 'react';\nimport { AppBar, Toolbar, Grid, Card, CardContent, CircularProgress, CardMedia, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport mockData from './mockData.js';\nimport { toFirstCharUppercase } from './utils.js';\nimport axios from 'axios';\nconst useStyles = makeStyles({\n  pokedexContainer: {\n    paddingTop: '20px',\n    paddingLeft: '50px',\n    paddingRight: '50px'\n  },\n  cardMedia: {\n    margin: \"auto\"\n  },\n  cardContent: {\n    textAlign: 'center'\n  }\n});\n\nconst Pokedex = props => {\n  const {\n    history\n  } = props;\n  const classes = useStyles();\n  const [pokemonData, setPokemonData] = useState({});\n  useEffect(() => {\n    axios.get(`https://pokeapi.co/api/v2/pokemon?limit=807`).then(function (response) {\n      const {\n        data\n      } = response;\n      const {\n        results\n      } = data;\n      const newPokemonData = {};\n      results.forEach((pokemon, index) => {\n        newPokemonData[index + 1] = {\n          id: index + 1,\n          name: pokemon.name,\n          sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`\n        };\n      });\n      setPokemonData(newPokemonData);\n    });\n  }, []);\n\n  const getPokemonCard = pokemonId => {\n    console.log(pokemonData[`${pokemonId}`]);\n    const {\n      id,\n      name,\n      sprite\n    } = pokemonData[pokemonId];\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      key: pokemonId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      onClick: () => history.push(`/${pokemonId}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      className: classes.cardMedia,\n      image: sprite,\n      style: {\n        width: \"130px\",\n        height: \"130px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.cardContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, `${id}.${toFirstCharUppercase(name)}`))));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  })))), pokemonData ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.pokedexContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, Object.keys(pokemonData).map(pokemonId => getPokemonCard(pokemonId))) : /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default Pokedex;","map":{"version":3,"sources":["C:/Users/zille/OneDrive/Documents/GitHub/pokedex_project/pokedex_project/src/Pokedex.js"],"names":["React","useState","useEffect","AppBar","Toolbar","Grid","Card","CardContent","CircularProgress","CardMedia","Typography","makeStyles","mockData","toFirstCharUppercase","axios","useStyles","pokedexContainer","paddingTop","paddingLeft","paddingRight","cardMedia","margin","cardContent","textAlign","Pokedex","props","history","classes","pokemonData","setPokemonData","get","then","response","data","results","newPokemonData","forEach","pokemon","index","id","name","sprite","getPokemonCard","pokemonId","console","log","push","width","height","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n    AppBar ,\r\n    Toolbar,\r\n    Grid,\r\n    Card, \r\n    CardContent, \r\n    CircularProgress, \r\n    CardMedia, \r\n    Typography } from \"@material-ui/core\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport mockData from './mockData.js';\r\nimport {toFirstCharUppercase} from './utils.js';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    pokedexContainer: {\r\n        paddingTop: '20px',\r\n        paddingLeft: '50px',\r\n        paddingRight: '50px'\r\n    },\r\n    cardMedia: {\r\n        margin: \"auto\"\r\n    },\r\n    cardContent: {\r\n        textAlign: 'center'\r\n    }\r\n})\r\n\r\n\r\nconst Pokedex = (props) => {\r\n    const {history} = props;\r\n    const classes = useStyles();\r\n    const [pokemonData, setPokemonData] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get(`https://pokeapi.co/api/v2/pokemon?limit=807`)\r\n        .then(function (response) {\r\n            const { data } = response;\r\n            const { results } = data;\r\n            const newPokemonData = {};\r\n            results.forEach((pokemon, index) => {\r\n              newPokemonData[index + 1] = {\r\n                id: index + 1,\r\n                name: pokemon.name,\r\n                sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\r\n                  index + 1\r\n                }.png`,\r\n              };\r\n            });\r\n            setPokemonData(newPokemonData);\r\n          });\r\n    }, []);\r\n    \r\n    const getPokemonCard = (pokemonId) => {\r\n\r\n        console.log(pokemonData[`${pokemonId}`]);\r\n        const {id, name, sprite} = pokemonData[pokemonId];\r\n\r\n        return (\r\n            <Grid item xs = {12} sm = {4} key = {pokemonId}>\r\n                <Card onClick = {() => history.push(`/${pokemonId}`)} > \r\n                    <CardMedia \r\n                        className = {classes.cardMedia}\r\n                        image = {sprite}\r\n                        style = {{width: \"130px\", height:\"130px\" }}\r\n                    />\r\n                    <CardContent className = {classes.cardContent}>\r\n                        <Typography>{`${id}.${toFirstCharUppercase(name)}`}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n    \r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar position = \"static\">\r\n                <Toolbar>\r\n                    <div>\r\n                        <SearchIcon />\r\n                        <TextField />\r\n                    </div> \r\n                </Toolbar>\r\n            </AppBar>\r\n            {pokemonData ? (\r\n                <Grid container spacing = {2} className = {classes.pokedexContainer}>\r\n                    {Object.keys(pokemonData).map(pokemonId => \r\n                        getPokemonCard(pokemonId))}\r\n            </Grid>\r\n            ) : (\r\n                <CircularProgress />\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pokedex;"]},"metadata":{},"sourceType":"module"}